# what
    suatu class yang digunakan untuk mengumpulkan semua proses yang berhubungan dengan data, baik itu berupa menyimpan atau mengambil data

    berfungsi mengatur data yang memiliki lebih dari satu sumber

    see also: [../4_android_architecture_component/4.4_pengenalan_android_architecture_component.txt]


# why (we need repository pattern)
    separation of logic:

    benefits
        - memisahkan aplikasi dari sumber data
        - menyediakan data dari berbagai sumber seperti API, database lokal atau dari cache, tanpa client khawatir akan hal ini
        - mengisolasi lapisan data
        - satu kontrol, centralized, akses yang konsisten pada data
        - mudah untuk melakukan testing pada business logic dengan unit test
        - mudah untuk menambahkan sumber data baru


# what (are the components of repository)
    sumber
        - database local: room, sqlite, realm, greendao, dll
        - database remote
        - cache
        - preferences


# best practices
    - naming: <data_type>+Repository (e.g. MovieRepository)
    - pisahkan repository untuk data yang berbeda
    - jika repository terlalu besar, buat menjadi multi level repository
    - jika terdapat lebih dari satu sumber data, pastikan terdapat Single Source of Truth (SSoT), yakni satu sumber data yang konsisten diambil


# proses offline-online
    contoh app yang menampilkan daftar film

    ┏━━━━━━━━━━━━┓  1   ┌───────────────────┐   2   ┌───────────┐
    ┃    USER    ┃─────▶│ ListMovieActivity │──────▶│ ViewModel │
    ┗━━━━━━━━━━━━┛      └───────────────────┘       └───────────┘
          ▲                                               │
          │           [ OFFLINE ]                         │ 3
          │                                               ▼
          │             ┌────────────────────┐   8  ╭────────────┐    4     ╭─────────────╮
          │             │ Get ListMovie from │◀─────│ Repository │━━━━━━━━━▶│ Request API │
       11 │             │   Local Storage    │      └────────────╯          ╰─────────────╯
          │             └────────────────────┘            ▲                        ┃
          │                       │                       ┃       [ ONLINE ]       ┃ 5
          │                       │ 9                     ┃ 7                      ┃
          │                       ▼                       ┃                        ▼
     ┌───────────┐     10   ┌───────────┐        ╭──────────────────╮   6  ╭───────────────╮
     │  Display  │◀─────────│ ViewModel │        │ Insert ListMovie │◀━━━━━│ Get ListMovie │
     │ ListMovie │          └───────────┘        │ to Local Storage │      │   from API    │
     └───────────┘                               ╰──────────────────╯      ╰───────────────╯



# composite vs inheritance
    dalam repository kita menggunakan konsep Composition bukan inheritance


# links
    [https://developer.android.com/jetpack/guide/data-layer]
