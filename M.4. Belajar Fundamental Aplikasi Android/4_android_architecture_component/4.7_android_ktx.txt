# Android KTX
    ## what
        Android KTX adalah sekumpulan Kotlin extension bagian dari Android Jetpack yang diumumkan Google pada I/O 2018.
        berguna untuk mengoptimalkan penggunaan Jetpack dan Android API pada pengenbangan aplikasi Android dengan basis bahasa Kotlin

    ## why
        tujuan Android KTX adalah untuk membuat pengembangan aplikasi Android dengan Kotlin jauh lebih ringkas, sederhana, dan idiomatis.


    ## mencakup
        Views
        Canvas
        Animator
        Database
        Util
        ...
        Support Libraru
        Architecture Component


    ## how
        ``` (build.gradle)
            repositories {
                google()
            }
        ```

        Android Studio v > 3.x.x tidak perlu ditambahkan karena secara default sudah secara otomatis ditambahkan


    # modules
        androidx.core:core-ktx
        androidx.fragment:fragment-ktx
        androidx.palette:palette-ktx
        androidx.sqlite:sqlite-ktx
        androidx.collection:collection-ktx
        androidx.lifecycle:lifecycle-viewmodel-ktx
        androidx.lifecycle:lifecycle-reactivestreams-ktx
        androidx.arch.navigation:navigation-common-ktx
        androidx.arch.navigation:navigation-fragment-ktx
        androidx.arch.navigation:navigation-runtime-ktx
        androidx.arch.navigation:navigation-testing-ktx
        androidx.arch.navigation:navigation-ui-ktx
        androidx.work:work-runtime-ktx



# extensions function di dalam Android KTX
    ## ViewModel
        ViewModel initialization:
            ```[normally]
                val mainViewModel = ViewModelProvider(this, ViewModelProvider.NewInstanceFactory()).get(MainViewModel::class.java)
            ```
            ```[android ktx]
                private val mainViewModel: MainViewModel by viewModels()
            ```

        module: androidx.activity:activity-ktx  (Activity)
                androidx.fragment:fragment-ktx  (Fragment)


    ## Fragment
        fragment transaction:
            ```[normally]
                supportFragmentManager
                   .beginTransaction()
                   .replace(fragmentContainer, myFragment, FRAGMENT_TAG)
                   .commitAllowingStateLoss()
            ```
            ```[android ktx]
                supportFragmentManager.commitNow(allowStateLoss = true) {
                    replace(fragmentContainer, myFragment, FRAGMENT_TAG)
                }
            ```


    ## Content
        menggunakan system service
            ```[normally]
                val alarmManager = getSystemService(Context.ALARM_SERVICE) as AlarmManager
            ```
            ```[android ktx]
                val alarmManager = getSystemService<AlarmManager>()
            ```

        menggunakan ContentValues
            ```[normally]
                val contentValues = ContentValues()
                contentValues.put(COLUMN_USER , "dicoding")
                contentValues.put(COLUMN_ADDRESS , "Indonesia")
                contentValues.put(COLUMN_PHONE , "085777888999")
            ```
            ```[android ktx]
                val contentvalues = contentValuesOf(
                        COLUMN_USER to "dicoding",
                        COLUMN_ADDRESS to "Indonesia",
                        COLUMN_PHONE to "085777888999"
                )
            ```


    ## SQLite
        database transaction
            ```[normally]
                database.beginTransaction()

                try {
                    // do some transaction
                    database.setTransactionSuccessful()
                } finally {
                    database.endTransaction()
                }
            ```
            ```[android ktx]
                database.transaction {
                    // do some transaction
                }
            ```

    ## Net
        val uriString = Uri.parse(string)       [normally]
        val uriString = string.toUri()          [android ktx]


    ## Text
        SpannableStringBuilder
            ```[normally]
                val mySpannable = SpannableStringBuilder("Klik help.dicoding.com untuk info lebih lanjut")
                mySpannable.setSpan(StyleSpan(Typeface.BOLD) , 5 , 22 , 0)
                mySpannable.setSpan(UnderlineSpan() , 5 , 22 , 0)
                mySpannable.setSpan(ForegroundColorSpan(Color.RED) , 5 , 22 , 0)
            ```
            ```[android ktx]
                val mySpannable = "Klik help.dicoding.com untuk info lebih lanjut".toSpannable()
                mySpannable[5..22] = ForegroundColorSpan(Color.RED)
                mySpannable[5..22] = UnderlineSpan()
                mySpannable[5..22] = StyleSpan(Typeface.BOLD)

            ----[ OR ]----------------------------------------------------------
                myText.text = buildSpannedString {
                    append("Klik").bold {
                        underline {
                            color(Color.RED) {
                                append(" help.dicoding.com ")
                            }
                        }
                    }.append("untuk info lebih lanjut")
                }
            ```


    ## OS
        handler
            ```
                handler.postAtTime(uptimeMillis = 400) {
                    // create some magic
                }

                handler.postDelayed(delayInMillis = 400){
                    // create some magic
                }
            ```

    ## Animation
        animation listener
            ```
                animator.addListener { handlingAnimation(it) }
            ```

        animation listener with callback spesifik
            ```
                animator.addListener {
                    onStart = { },
                    onCancel = { },
                    onEnd = { },
                    onRepeat = { },
                }
            ```

        menambahkan jeda ke animasi
            ```
                animator.addPauseListener {
                   handleAnimation(it)
                }

                // atau

                animator.addPauseListener(
                   onPause = {},
                   onResume = {}
                )
            ```

        menambahkan kode ke individual event pada animasi
            ```
                animator.doOnStart { handleAnimation(it) }
                animator.doOnResume { handleAnimation(it) }
                animator.doOnPause { handleAnimation(it) }
                animator.doOnCancel { handleAnimation(it) }
                animator.doOnEnd { handleAnimation(it) }
                animator.doOnRepeat { handleAnimation(it) }
            ```


    ## Transition
        ```
            transition.addListener {
                handlingTransition(it)
            }

            //atau:

            transition.addListener(
                onEnd = {},
                onStart = {},
                onCancel = {},
                onResume = {},
                onPause = {}
            )

            // individually

            transition.doOnCancel {  }
            transition.doOnEnd {  }
            transition.doOnPause {  }
            transition.doOnResume {  }
            transition.doOnStart {  }
        ```


    ## Views
        mengatur callback dari sebuah layout event
            ```
                view.doOnLayout {  }
                view.doOnNextLayout {  }
                view.doOnPreDraw {  }
            ```

        fungsi postDelayed dan postOnAnimationDelayed
            ```
                view.postDelayed(delayInMillis = 5000){
                    // do some magic
                }

                view.postOnAnimationDelayed(delayInMillis = 5000){
                   // do some magic
                }
            ```

        mengatur padding pada sebuah view
            ```
                view.setPadding(16)
                view.updatePadding(left = 10, right = 10, top = 10, bottom = 10)
                view.updatePaddingRelative(start = 10, end = 10, top = 10, bottom = 10)
            ```

        konversi instance dari sebuah View menjadi Bitmap
            val bitmap = view.drawToBitmap(config = bitmapConfig)


# links
    [https://github.com/android/android-ktx]
    [https://www.youtube.com/watch?v=r_19VZ0xRO8&feature=youtu.be]
    [https://www.youtube.com/watch?v=st1XVfkDWqk]
    [https://www.youtube.com/watch?v=LP3PaPrIFHo]
